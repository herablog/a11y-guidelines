version: 1

# 本ファイルは設定の仕方の見本であり、実用的な校正ルールではありません。
# もし、もっと充実した別のルールを使いたい時は以下のURLを参照してください。
# https://github.com/prh/rules
# おすすめは media/techbooster.yml です。

# 下記の説明を参考に、git submoduleとimportsを使って参照するのがよいでしょう。
# リポジトリの設定 git submodule add https://github.com/prh/rules.git prh-rules

# 別の設定ファイルを読み込み、mergeすることもできます。
imports:
  # - ./prh-rules/media/techbooster.yml
  # - ./prh-rules/files/markdown.yml
  # - ./prh-rules/files/review.yml

  # imports にはいくつかのオプションが指定できる
  # - path: other-rules.yml
    # 連鎖的なimportを禁止する
    # disableImports: true
    # importするルールで不都合なものは殺すことができる
    # patternやexpectedに指定する文字列は --rules-yaml で得られるパース後の表現を使うこと
    # ignoreRules:
      # pattern: /a/ と等価
      # - /a/
      # - pattern:  /a/
      # - expected: /b/

rules:

  # 大文字小文字全角半角の統一
  - expected: Cookie
  # 以下と等価 正規表現には強制でgフラグが付く
  # - expected: Cookie
  #   pattern: "/[CcＣｃ][OoＯｏ][OoＯｏ][KkＫｋ][IiＩｉ][EeＥｅ]/g"
  #   options:
  #     wordBoundary: false
  #   specs: []

  # 変換結果についてテストも書ける
  - expected: jQuery
    specs:
      - from: jquery
        to:   jQuery
      - from: ＪＱＵＥＲＹ
        to:   jQuery

  # patternは複数記述可能 patterns としてもOK
  - expected: ユーザー
    patterns:
      - 利用者

  - expected: または
    patterns:
      - 又は

  - expected: や
    patterns:
      - 及び

  - expected: 代わり
    patterns:
      - かわり
      - がわり

  - expected: 文字色
    patterns:
      - テキスト色

  # patternには正規表現が利用可能
  - expected: （$1）
    pattern:  /\(([^)]+)\)/
    specs:
      # 半角括弧を全角括弧へ
      - from: (そのとおり)
        to:   （そのとおり）

  # 否定戻り先読みが欲しいがJSにはない… regexpMustEmptyで、特定のキャプチャグループが空であることを指定して代用とする
  - expected: ソフトウェア
    pattern:  /(日経)?ソフトウエア/
    regexpMustEmpty: $1
    specs:
      # 普通に変換
      - from: 広義のソフトウエア
        to:   広義のソフトウェア
      # 日経ソフトウエア(書名)は変換しない
      - from: 日経ソフトウエア
        to:   日経ソフトウエア

  # 長音の統一には否定後読みを活用する そうしないと サーバー が サーバーー にされてしまったりする
  - expected: サーバー
    pattern:  /サーバ(?!ー)/
    specs:
      - from: サーバ
        to:   サーバー

  - expected: ユーザー
    pattern:  /ユーザ(?!ー)/
    specs:
      - from: ユーザ
        to:   ユーザー
